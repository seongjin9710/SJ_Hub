<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵퍼파일 생성 후 반드시 sql-map-config.xml 파일에 mapper 등록해줘야 함 -->
<mapper namespace="studentMapper">
	<resultMap type="com.spring.biz.vo.MemberVO" id="member">
		<result column="MEM_ID" 	property="memId"/>	
		<result column="MEM_PASSWORD" 	property="memPassword"/>	
		<result column="MEM_GENDER" 	property="memGender"/>	
		<result column="MEM_EMAIL" 	property="memEmail"/>	
		<result column="MEM_ADDR" 	property="memAddr"/>	
		<result column="MEM_GRADE" 	property="memGrade"/>	
		<result column="MEM_PHONE" 	property="memPhone"/>	
		<result column="MEM_BIRTHDAY" 	property="memBirthday"/>	
		<result column="MEM_ZIP_CODE" 	property="memZipCode"/>	
		<result column="MEM_TEL" 	property="memTel"/>	
		<result column="MEM_PHOTO" 	property="memPhoto"/>	
	</resultMap>
	<resultMap type="com.spring.biz.vo.StudentVO" id="student">
		<result column="STU_NUM" 	property="stuNum"/>	
		<result column="DEP_NO" 	property="depNo"/>	
		<result column="DEP_NAME" 	property="depName"/>
		<result column="COLLEGE_NUM" 	property="collegeNum"/>
		<result column="COLLEGE_NAME" 	property="collegeName"/>
		<result column="DEP_NO2" 	property="depNo2"/>	
		<result column="STATUS_NUM" 	property="statusNum"/>
		<result column="MEM_STATUS" 	property="memStatus"/>
		<result column="STU_YEAR" 	property="stuYear"/>
		<result column="STU_NAME" 	property="stuName"/>
	</resultMap>
	<resultMap type="com.spring.biz.vo.StatusRegVO" id="statusReg">
		<result column="REG_NUM" property="regNum"/>
		<result column="FROM_STATUS" property="fromStatus"/>
		<result column="TO_STATUS" property="toStatus"/>
		<result column="IS_COMFIRM" property="isComfirm"/>
		<result column="STU_NUM" property="stuNum"/>
	</resultMap>
	<resultMap type="com.spring.biz.vo.LectureVO" id ="lecture">
	   	<result column="LEC_CODE" 	property="lecCode"/>	
	   	<result column="COLLEGE_NUM" 	property="collegeNum"/>
	   	<result column="COLLEGE_NAME" 	property="collegeName"/>
	   	<result column="LECTURE_NAME" 	property="lectureName"/>	
	   	<result column="DEP_NO" 	property="depNo"/>	
	   	<result column="PROF_NUM" 	property="profNum"/>	
	   	<result column="ASST_NUM" 	property="asstNum"/>
	   	<result column="ASST_NAME" 	property="asstName"/>
	   	<result column="LEC_CREDIT" 	property="lecCredit"/>	
	   	<result column="REC_YEAR" 	property="recYear"/>	
	   	<result column="ATTACHMENT" 	property="attachment"/>	
	   	<result column="PROF_NAME" 	property="profName"/>	
	   	<result column="DEP_NAME" 	property="depName"/>	
	   	<result column="LEC_TT_CODE" 	property="lecTtCode"/>	
	   	<result column="LEC_CODE" 	property="lecCode"/>	
	   	<result column="LEC_YEAR" 	property="lecYear"/>	
	   	<result column="LEC_TERM" 	property="lecTerm"/>	
	   	<result column="LEC_WEEK" 	property="lecWeek"/>	
	   	<result column="TT_SEQ" 	property="ttSeq"/>	
	   	<result column="FAC_CODE" 	property="facCode"/>	
	   	<result column="STU_MAX_NUM" 	property="stuMaxNum"/>	
   </resultMap>
	<resultMap type="com.spring.biz.vo.LectureAInfoVO" id ="lectureA">
	   	<result column="LEC_CODE" 	property="lecCode"/>	
	   	<result column="DEP_NO" 	property="depNo"/>	
	   	<result column="PROF_NUM" 	property="profNum"/>	
	   	<result column="ASST_NUM" 	property="asstNum"/>	
	   	<result column="LEC_CREDIT" 	property="lecCredit"/>	
	   	<result column="REC_YEAR" 	property="recYear"/>	
	   	<result column="LECTURE_NAME" 	property="lectureName"/>	
	   	<result column="REG_EMP" 	property="regEmp"/>	
	   	<result column="ATTACHMENT" 	property="attachment"/>	
	   	<result column="PROF_NAME" 	property="profName"/>	
	   	<result column="DEP_NAME" 	property="depName"/>	
	   	<result column="COLLEGE_NUM" 	property="collegeNum"/>	
	   	<result column="ASST_NAME" 	property="asstName"/>	
	   	<result column="COLLEGE_NAME" 	property="collegeName"/>	
	   	<result column="LEC_TT_CODE" 	property="lecTtCode"/>	
	   	<result column="LEC_YEAR" 	property="lecYear"/>	
	   	<result column="LEC_TERM" 	property="lecTerm"/>	
	   	<result column="LEC_WEEK" 	property="lecWeek"/>	
	   	<result column="TT_SEQ" 	property="ttSeq"/>	
	   	<result column="STU_MAX_NUM" 	property="stuMaxNum"/>	
	   	<result column="FAC_CODE" 	property="facCode"/>	
	   	<result column="LEC_CODE" 	property="lecCode"/>	
	   	<result column="STU_APP_NUM" 	property="stuAppNum"/>	
	   	<result column="SEM_CODE" 	property="semCode"/>	
   </resultMap>
   <resultMap type="com.spring.biz.vo.LecTTVO" id ="lecTT">
	   	<result column="LEC_TT_CODE" 	property="lecTtCode"/>	
	   	<result column="LEC_CODE" 		property="lecCode"/>	
	   	<result column="STU_MAX_NUM" 	property="stuMaxNum"/>	
	   	<result column="STU_APP_NUM" 	property="stuAppNum"/>	
	   	<result column="SEM_CODE" 		property="semCode"/>
   </resultMap>
   
    <resultMap type="com.spring.biz.vo.LecTimeVO" id ="lecTime">
	   	<result column="LEC_TIME_NUM" 		property="lecTimeNum"/>	
	   	<result column="LEC_TT_CODE" 		property="lecTtCode"/>	
		<result column="LEC_WEEK" 			property="lecWeek"/>	
	   	<result column="TT_SEQ" 			property="ttSeq"/>
	   	<result column="FAC_CODE" 		property="facCode"/>	
   </resultMap>
   
   <resultMap type="com.spring.biz.vo.CollegeVO" id ="college">
	   	<result column="COLLEGE_NUM" 	property="collegeNum"/>	
	   	<result column="COLLEGE_NAME" 	property="collegeName"/>	
   </resultMap>
   
   <resultMap type="com.spring.biz.vo.DepVO" id="dep">
		<result column="DEP_NO" property="depNo"/>
		<result column="DEP_NAME" property="depName"/>
		<result column="COLLEGE_NUM" property="collegeNum"/>
   </resultMap>
   
   <resultMap type="com.spring.biz.vo.StuTTVO" id="stuTT">
		<result column="STU_TT_CODE" property="stuTtCode"/>
		<result column="STU_NUM" property="stuNum"/>
		<result column="LEC_TT_CODE" property="lecTtCode"/>
		<result column="DEP_NAME" property="depName"/>
		<result column="COLLEGE_NAME" property="collegeName"/>
		<result column="LECTURE_NAME" property="lectureName"/>
		<result column="LEC_CREDIT" property="lecCredit"/>
		<result column="REC_YEAR" property="recYear"/>
		<result column="PROF_NAME" property="profName"/>
		<result column="SEM_CODE" property="semCode"/>
   </resultMap>
   
   <resultMap type="com.spring.biz.vo.StuTTCartVO" id="stuTTCart">
		<result column="STU_TT_CART_NUM" property="stuTtCartNum"/>
		<result column="STU_NUM" property="stuNum"/>
		<result column="LEC_TT_CODE" property="lecTtCode"/>
		<result column="DEP_NAME" property="depName"/>
		<result column="COLLEGE_NAME" property="collegeName"/>
		<result column="LECTURE_NAME" property="lectureName"/>
		<result column="LEC_CREDIT" property="lecCredit"/>
		<result column="REC_YEAR" property="recYear"/>
		<result column="PROF_NAME" property="profName"/>
		<result column="SEM_CODE" property="semCode"/>
   </resultMap>
   
   <resultMap id="repair" type="com.spring.biz.vo.RepairRequestVO">
	<result property="requestNum" column="REQUEST_NUM"/>
	<result property="requestTitle" column="REQUEST_TITLE"/>
	<result property="requestContent" column="REQUEST_CONTENT"/>
	<result property="requestName" column="REQUEST_NAME"/>
	<result property="requestCreate" column="REQUEST_CREATE"/>
	<result property="requestReadCnt" column="REQUEST_READ_CNT"/>
	<result property="requestStatus" column="REQUEST_STATUS"/>
	<result property="stuNum" column="STU_NUM"/>
	<result property="stuYear" column="STU_YEAR"/>
	<result property="depName" column="DEP_NAME"/>
	<result column="ROW_NUM" 		property="rowNum"/>
	</resultMap>
	
	
	<resultMap type="com.spring.biz.vo.ApplyManagementVO" id="apply">
		<result column="APPLY_NUM"  		 		property="applyNum" />
		<result column="STU_NUM"   					property="stuNum" />
		<result column="APPLY_TYPE"    				property="applyType" />
		<result column="MAJOR_CONTENT"   			property="majorContent" />
		<result column="MAJOR_CREATE_DATE" 			property="majorCreateDate" />
		<result column="PROCESSING_DATE"    		property="dmajorCollegeNum" />
	
		<result column="MAJOR_COLLEGE_NUM"   		property="majorCollegeNum" />
		<result column="MAJOR_DEPNO"    			property="majorDepno" />
	
		<result column="DMAJOR_DEPNO"    			property="dmajorDepno" />
		<result column="DMAJOR_COLLEGE_NUM"   		property="dmajorCollegeNum" />
		<result column="FROM_COLLEGE_NUM"    		property="fromCollegeNum" />
		<result column="FROM_DEP_NO"   				property="fromDepNo" />

		<result column="MAJOR_STATUS"    		property="majorStatus" />
		<result column="COLLEGE_NAME"  			property="collegeName" />
		<result column="DEP_NAME" 		 		property="depName" />	
		<result column="MEM_STATUS" 			property="memStatus" />
		<result column="STU_YEAR" 				property="stuYear" />
		<result column="STU_NAME" 				property="stuName" />
		<result column="COLLEGE_NAME2" 			property="collegeName2" />
		<result column="DEP_NAME2"   			property="depName2" />
		<result column="COLLEGE_NAME21" 		property="collegeName21" />
		<result column="DEP_NAME21"   			property="depName21" />
	</resultMap>
	
	
	<resultMap type="com.spring.biz.vo.MyTimetableVO" id="myTimetable">
		<result column="STU_TT_CODE"  		 	property="stuTtCode" />
		<result column="LEC_TT_CODE"   				property="lecTtCode" />
		<result column="LECTURE_NAME"    		property="lectureName" />
		<result column="LEC_CREDIT"   		property="lecCredit" />
		<result column="PROF_NAME" 		property="profName" />
		<result column="SEM_CODE"    property="semCode" />
	</resultMap>
	<resultMap type="com.spring.biz.vo.SemesterVO" id="semester">
		<result column="SEM_CODE" property="semCode"/>
		<result column="YEAR" property="year"/>
		<result column="TERM" property="term"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
	</resultMap>
	<resultMap type="com.spring.biz.vo.MyGradeVO" id="myGrade">
		<result column="YEAR" property="year"/>
		<result column="TERM" property="term"/>
		<result column="LEC_CODE" property="lecCode"/>
		<result column="LECTURE_NAME" property="lectureName"/>
		<result column="LEC_CREDIT" property="lecCredit"/>
		<result column="GRADE_NUM" property="gradeNum"/>
		<result column="GRADE_SCORE" property="gradeScore"/>
		<result column="GRADE_ABC" property="gradeAbc"/>
		<result column="STU_NUM" property="stuNum"/>
		<result column="SEM_CODE" property="semCode"/>
	</resultMap>
	<resultMap type="com.spring.biz.vo.SemGradeVO" id="semGrade">
		<result column="SEM_CODE" property="semCode"/>
		<result column="SEM_AVG_GRADE" property="semAvgGrade"/>
		<result column="SEM_TOTAL_CREDIT" property="semTotalCredit"/>
		<result column="ACQIRED_CREDIT" property="acqiredCredit"/>
	</resultMap>
	<resultMap type="com.spring.biz.vo.SemGradeDetailVO" id="semGradeDetail">
		<result column="STU_NUM" property="stuNum"/>
		<result column="LEC_TT_CODE" property="lecTtCode"/>
		<result column="LECTURE_NAME" property="lectrueName"/>
		<result column="PROF_NAME" property="profName"/>
		<result column="LEC_CREDIT" property="lecCredit"/>
		<result column="GRADE_ABC" property="gradeAbc"/>
		<result column="GRADE_SCORE" property="gradeScore"/>
		<result column="SEM_CODE" property="semCode"/>
	</resultMap>
	
	<select id="selectGradeDetail" resultMap="semGradeDetail">
	SELECT T.LEC_TT_CODE
    , LECTURE_NAME
    , (SELECT EMP_NAME FROM EMP_INFO WHERE EMP_NO = PROF_NUM) AS PROF_NAME
    , LEC_CREDIT
    , GRADE_ABC
    , GRADE_SCORE
	FROM STU_GRADE S, GRADE G, LEC_TT T, LECTURE_INFO I, STU_TT U
	WHERE T.LEC_CODE = I.LEC_CODE
	AND T.LEC_TT_CODE = U.LEC_TT_CODE
	AND U.STU_TT_CODE = S.STU_TT_CODE
	AND S.GRADE_NUM = G.GRADE_NUM
	AND U.STU_NUM = #{stuNum}
	AND T.SEM_CODE = #{semCode}
	</select>
	
	<!-- 전체 성적 -->
	<select id="selectTotalGrade" resultMap="semGrade">
	SELECT
	    TO_CHAR(SUM(GRADE_SCORE*LEC_CREDIT) / SUM(LEC_CREDIT), '0.00') AS SEM_AVG_GRADE
	    , SUM(LEC_CREDIT) AS SEM_TOTAL_CREDIT
	FROM STU_GRADE S, GRADE G, LEC_TT T, LECTURE_INFO I, STU_TT U
	WHERE T.LEC_CODE = I.LEC_CODE
		AND T.LEC_TT_CODE = U.LEC_TT_CODE
		AND U.STU_TT_CODE = S.STU_TT_CODE
		AND S.GRADE_NUM = G.GRADE_NUM
		AND U.STU_NUM = #{memId}
	</select>
	
	<!-- 학기별 간략한 성적 -->
	<select id="selectSemGrade" resultMap="semGrade">
    SELECT
	     SEM_CODE
	    , TO_CHAR(SUM(GRADE_SCORE*LEC_CREDIT) / SUM(LEC_CREDIT), '0.00') AS SEM_AVG_GRADE
	    , SUM(LEC_CREDIT) AS SEM_TOTAL_CREDIT
	FROM STU_GRADE S, GRADE G, LEC_TT T, LECTURE_INFO I, STU_TT U
	WHERE T.LEC_CODE = I.LEC_CODE
		AND T.LEC_TT_CODE = U.LEC_TT_CODE
		AND U.STU_TT_CODE = S.STU_TT_CODE
		AND S.GRADE_NUM = G.GRADE_NUM
		AND U.STU_NUM = #{memId}
	GROUP BY SEM_CODE
	ORDER BY SEM_CODE
	</select>
	
	<select id="selectSemLecCredit" resultMap="semGrade">
	SELECT SEM_CODE
		, SUM(LEC_CREDIT) AS ACQIRED_CREDIT
    FROM STU_GRADE S, GRADE G, LEC_TT T, LECTURE_INFO I, STU_TT U
    WHERE S.GRADE_NUM = G.GRADE_NUM
    AND T.LEC_CODE = I.LEC_CODE
    AND T.LEC_TT_CODE = U.LEC_TT_CODE
    AND U.STU_TT_CODE = S.STU_TT_CODE
    AND G.GRADE_ABC != 'F'
    AND S.STU_NUM = #{memId}
    GROUP BY SEM_CODE
    ORDER BY SEM_CODE
	</select>
	
	<!-- 학생이 학적변동 신청 했을때 -->
	<insert id="changeStatus">
		INSERT INTO STATUS_REG (
			REG_NUM
			, FROM_STATUS
			, TO_STATUS
			, IS_COMFIRM
			, STU_NUM
			, APPLICATION_DATE
		) VALUES (
			(SELECT NVL(MAX(REG_NUM) + 1, 1) FROM STATUS_REG)
			, #{fromStatus}
			, #{toStatus}
			, 'N'
			, #{stuNum}
			, TO_CHAR(SYSDATE, 'YYYY.MM.DD')
		)
	</insert>
	<!-- 학적변동 신청상태 확인 -->
	<select id="checkComfirm" resultMap="statusReg">
		SELECT REG_NUM
		FROM STATUS_REG
		WHERE STU_NUM = #{stuNum}
		AND IS_COMFIRM = 'N'
	</select>
	<!-- 교과과정 -> 강의목록 -->
	<select id="selectLectureList" resultMap="lecture">
		SELECT LEC_CODE
			, (SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = L.DEP_NO) AS DEP_NAME
			, (SELECT EMP_NAME FROM EMP_INFO WHERE EMP_NO = L.PROF_NUM) AS PROF_NAME
			, (SELECT EMP_NAME FROM EMP_INFO WHERE EMP_NO = L.ASST_NUM) AS ASST_NAME
			, LEC_CREDIT
			, REC_YEAR
			, LECTURE_NAME
			, ATTACHMENT
			, (SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = L.COLLEGE_NUM) AS COLLEGE_NAME
			, REG_EMP
			, L.COLLEGE_NUM
			, DEP_NO
		FROM LECTURE_INFO L, COLLEGE_INFO C
		WHERE C.COLLEGE_NUM = L.COLLEGE_NUM
		<if test="collegeNum != null and collegeNum != ''">
			AND L.COLLEGE_NUM = #{collegeNum}
		</if>
		<if test="depNo != null and depNo != ''">
			AND DEP_NO = #{depNo}
		</if>
		<if test="lecCredit != null and lecCredit != ''">
			AND LEC_CREDIT = #{lecCredit}
		</if>
		<if test="recYear != null and recYear != ''">
			AND REC_YEAR = #{recYear}
		</if>
		<if test="lecCode != null and lecCode != ''">
			AND (UPPER(LEC_CODE) LIKE '%'||UPPER(#{lecCode})||'%' OR UPPER(LECTURE_NAME) LIKE '%'||UPPER(#{lecCode})||'%')
		</if>
		ORDER BY COLLEGE_NUM, DEP_NO
	</select>
	<!-- 현재 학기 구하기 -->
	<select id="selectSemester" resultType="int">
		SELECT SEM_CODE
		FROM SEMESTER
		WHERE #{nowDate} BETWEEN TO_NUMBER(TO_CHAR(START_DATE, 'YYYYMMDD')) AND TO_NUMBER(TO_CHAR(END_DATE, 'YYYYMMDD'))	
	</select>
	<!-- 수강신청 개설과목 리스트 -->
	<select id="selectLecTTList" resultMap="lectureA">
	SELECT LEC_TT_CODE
		, T.LEC_CODE
		, STU_MAX_NUM
		, STU_APP_NUM
		, SEM_CODE
		, DEP_NO
		, COLLEGE_NUM
		, ATTACHMENT
		, LECTURE_NAME
		, REC_YEAR
		, LEC_CREDIT
		, (SELECT EMP_NAME FROM EMP_INFO WHERE PROF_NUM = EMP_NO) AS PROF_NAME
		, (SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = I.DEP_NO) AS DEP_NAME
		, (SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = I.COLLEGE_NUM) AS COLLEGE_NAME
	FROM LEC_TT T, LECTURE_INFO I
	WHERE T.LEC_CODE = I.LEC_CODE
	AND SEM_CODE = #{semCode}
	<if test="collegeNum != null and collegeNum != ''">
		AND I.COLLEGE_NUM = #{collegeNum}
	</if>
	<if test="depNo != null and depNo != ''">
		AND DEP_NO = #{depNo}
	</if>
	<if test="lecCredit != null and lecCredit != ''">
		AND I.LEC_CREDIT = #{lecCredit}
	</if>
	<if test="recYear != null and recYear != ''">
		AND I.REC_YEAR = #{recYear}
	</if>
	<if test="lecTtCode != null and lecTtCode != ''">
		AND (UPPER(LEC_TT_CODE) LIKE '%'||UPPER(#{lecTtCode})||'%' OR UPPER(LECTURE_NAME) LIKE '%'||UPPER(#{lecTtCode})||'%')
	</if>
	</select>
	<select id="selectLecTimeList" resultMap="lecTime">
	SELECT LEC_TT_CODE
		, LEC_WEEK
		, TT_SEQ
		, LEC_TIME_NUM
		, FAC_CODE
	FROM LEC_TIME
	ORDER BY LEC_TT_CODE, LEC_WEEK ASC
	</select>
	<!-- 예비수강신청 목록 -->
	<select id="selectCartList" resultMap="stuTTCart">
	SELECT STU_NUM
	    , C.LEC_TT_CODE
	    , SEM_CODE
	    , LECTURE_NAME
	    , LEC_CREDIT
	    , REC_YEAR
	    , (SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = I.COLLEGE_NUM) AS COLLEGE_NAME
	    , (SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = I.DEP_NO) AS DEP_NAME
	    , (SELECT EMP_NAME FROM EMP_INFO WHERE PROF_NUM = EMP_NO) AS PROF_NAME
	FROM STU_TT_CART C, LEC_TT L, LECTURE_INFO I
	WHERE C.STU_NUM = #{stuNum}
	AND C.LEC_TT_CODE = L.LEC_TT_CODE
	AND L.LEC_CODE = I.LEC_CODE
	</select>
	<!-- 예비수강신청 -->
	<insert id="insertTtCart">
	INSERT INTO STU_TT_CART (
		STU_TT_CART_NUM
		, STU_NUM
		, LEC_TT_CODE
	) VALUES (
		(SELECT NVL(MAX(STU_TT_CART_NUM) + 1, 1) FROM STU_TT_CART)
		, #{stuNum}
		, #{lecTtCode}
	)
	</insert>
	<!-- 예비수강신청 -> 현재인원 update -->
	<update id="updateAppNum">
	UPDATE LEC_TT
	SET STU_APP_NUM = (SELECT STU_APP_NUM FROM LEC_TT WHERE LEC_TT_CODE = #{lecTtCode}) + 1
	WHERE LEC_TT_CODE = #{lecTtCode}
	</update>
	<!-- 예비수강신청 취소 -->
	<delete id="deleteTtCart">
	DELETE STU_TT_CART
	WHERE STU_NUM = #{stuNum}
	AND LEC_TT_CODE = #{lecTtCode}
	</delete>
	<update id="minusAppNum">
	UPDATE LEC_TT
	SET STU_APP_NUM = (SELECT STU_APP_NUM FROM LEC_TT WHERE LEC_TT_CODE = #{lecTtCode}) - 1
	WHERE LEC_TT_CODE = #{lecTtCode}
	</update>
	
	<!-- 수강신청 -->
	<insert id="insertStuTT">
	INSERT INTO STU_TT (
		STU_TT_CODE
		, STU_NUM
		, LEC_TT_CODE
	) VALUES (
		(SELECT NVL(MAX(STU_TT_CODE) + 1, 1) FROM STU_TT)
		, #{stuNum}
		, #{lecTtCode}
	)
	</insert>
	<insert id="insertGrade">
	INSERT INTO STU_GRADE(
		GRADE_PK
		, STU_TT_CODE
		, GRADE_NUM
		, STU_NUM
	) VALUES (
		(SELECT NVL(MAX(GRADE_PK)+1, 1) FROM STU_GRADE)
		, (SELECT STU_TT_CODE FROM STU_TT WHERE STU_NUM = #{stuNum} AND LEC_TT_CODE = #{lecTtCode})
		, 10
		, #{stuNum}
	)
	</insert>
	<!-- 수강신청 목록 -->
	<select id="selectStuTTList" resultMap="stuTT">
	SELECT STU_NUM
	    , S.LEC_TT_CODE
	    , L.SEM_CODE
	    , LECTURE_NAME
	    , LEC_CREDIT
	    , REC_YEAR
	    , (SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = I.COLLEGE_NUM) AS COLLEGE_NAME
	    , (SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = I.DEP_NO) AS DEP_NAME
	    , (SELECT EMP_NAME FROM EMP_INFO WHERE PROF_NUM = EMP_NO) AS PROF_NAME
	FROM STU_TT S, LEC_TT L, LECTURE_INFO I, SEMESTER SS
	WHERE S.STU_NUM = #{stuNum}
	AND S.LEC_TT_CODE = L.LEC_TT_CODE
	AND L.LEC_CODE = I.LEC_CODE
	AND SS.SEM_CODE = L.SEM_CODE
	AND SYSDATE BETWEEN START_DATE AND END_DATE
	</select>
	<!-- 수강취소 -->
	<delete id="deleteStuTT">
	DELETE STU_TT
	WHERE STU_NUM = #{stuNum}
	AND LEC_TT_CODE = #{lecTtCode}
	</delete>
	<delete id="deleteGrade">
	DELETE STU_GRADE
	WHERE STU_NUM = #{stuNum}
	AND STU_TT_CODE = (SELECT STU_TT_CODE FROM STU_TT WHERE STU_NUM = #{stuNum} AND LEC_TT_CODE = #{lecTtCode})
	</delete>
	
	<!--시설물수리 글 쓰기 -->
	<insert id="insertRepairRequest">
	INSERT INTO REPAIR_REQUEST(
			REQUEST_NUM
			,REQUEST_TITLE
		  	,REQUEST_CONTENT
		   	,REQUEST_NAME
		   	,STU_NUM
		   	,STU_YEAR
		   	,DEP_NAME
		   ) VALUES ((SELECT NVL(MAX(REQUEST_NUM) +1, 1 ) FROM REPAIR_REQUEST)
		    ,#{requestTitle}
		    ,#{requestContent}
		   	,#{requestName}
		   	,#{stuNum}
		   	,#{stuYear}
		   	,#{depName}
		   )
	    </insert>

	
	
	<select id="selectRepairRequest" resultMap="repair">
		SELECT 
            REQUEST_NUM,
            REQUEST_TITLE,
            REQUEST_CONTENT,
            REQUEST_NAME,
            REQUEST_CREATE,
            REQUEST_READ_CNT,
            REQUEST_STATUS,
            ROW_NUM
                FROM
                (
                    SELECT REQUEST_NUM,
			            REQUEST_TITLE,
			            REQUEST_CONTENT,
			            REQUEST_NAME,
			            TO_CHAR(REQUEST_CREATE, 'YYYY-MM-DD') AS REQUEST_CREATE,
			            REQUEST_READ_CNT,
			            REQUEST_STATUS,
			            ROWNUM AS ROW_NUM
			    FROM REPAIR_REQUEST
			    ORDER BY REQUEST_NUM
                )
		WHERE ROW_NUM BETWEEN #{startIndex} AND #{endIndex}
	</select>
	
	
	<select id="getRepairListCnt" resultType="int">
		SELECT COUNT(*) AS listCnt FROM REPAIR_REQUEST
	</select>

	<select id="repairRequestDetail" resultMap="repair">
		SELECT REQUEST_NUM
			   ,REQUEST_TITLE
			   ,REQUEST_CONTENT
			   ,REQUEST_NAME
			   ,TO_CHAR(REQUEST_CREATE, 'YYYY-MM-DD') AS REQUEST_CREATE
			   ,REQUEST_READ_CNT
			   ,REQUEST_STATUS
			   ,STU_NUM
			   ,STU_YEAR
			   ,DEP_NAME
		FROM REPAIR_REQUEST
		WHERE REQUEST_NUM = #{requestNum}
	</select>

	<update id="upDateReadCnt">
		UPDATE REPAIR_REQUEST
		SET
		REQUEST_READ_CNT = REQUEST_READ_CNT + 1
		WHERE REQUEST_NUM = #{requestNum}
	</update>
	
		<!--전과신청 , 복수전공 신청 -->
	<insert id="insertApplyManagement">
	 INSERT INTO APPLY_MANAGEMENT (
	 	APPLY_NUM
	 	, STU_NUM
	 	, APPLY_TYPE
		, MAJOR_CONTENT
		, FROM_COLLEGE_NUM
		, FROM_DEP_NO
	 	<if test="applyType == 1">
		, MAJOR_DEPNO
		, MAJOR_COLLEGE_NUM
	 	</if>
		<if test="applyType == 2">
		, DMAJOR_COLLEGE_NUM
		, DMAJOR_DEPNO
		</if>
	 ) VALUES (
	 	(SELECT NVL(MAX(APPLY_NUM) +1, 1) FROM APPLY_MANAGEMENT)
	 	, #{stuNum}
	 	, #{applyType}
	 	, #{majorContent}
	 	, #{fromCollegeNum}
	 	, #{fromDepNo}
	 	<if test="applyType == 1">
	 	, #{majorDepno}
	 	, #{majorCollegeNum}
	 	</if>
	 	<if test="applyType == 2">
	 	, #{dmajorCollegeNum}
	 	, #{dmajorDepno}
	 	</if>
	 )
   </insert>
   <!--APPLY 전체 목록  -->
   <select id="selectDoubleMajorList" resultMap="apply">
		SELECT 
		APPLY_NUM
		, A.STU_NUM
		, APPLY_TYPE
		, MAJOR_CONTENT
		,(SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = A.FROM_DEP_NO) AS DEP_NAME
		,(SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = A.FROM_COLLEGE_NUM) AS COLLEGE_NAME
		<if test="majorDepno != null">
		,(SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = A.MAJOR_DEPNO) AS DEP_NAME2
		,(SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = A.MAJOR_COLLEGE_NUM) AS COLLEGE_NAME2
		</if>
		<if test="dmajorDepno != null">
		,(SELECT DEP_NAME FROM DEP_INFO WHERE DEP_NO = A.DMAJOR_DEPNO) AS DEP_NAME21
		,(SELECT COLLEGE_NAME FROM COLLEGE_INFO WHERE COLLEGE_NUM = A.DMAJOR_COLLEGE_NUM) AS COLLEGE_NAME21	
		</if>
		, MAJOR_STATUS
		, (SELECT MEM_STATUS FROM STATUS_INFO WHERE STATUS_NUM = S.STATUS_NUM) AS MEM_STATUS
		, STU_YEAR
		, STU_NAME
		, TO_CHAR(MAJOR_CREATE_DATE, 'YYYY-MM-DD') AS MAJOR_CREATE_DATE
		FROM APPLY_MANAGEMENT A , STUDENT_INFO S
		WHERE A.STU_NUM = S.STU_NUM
		AND A.STU_NUM = #{stuNum}
	</select>
	<!--신청확인  -->
	<select id="majorAplicationConfirm" resultType="int">
		SELECT COUNT(APPLY_NUM)
		FROM APPLY_MANAGEMENT
		WHERE STU_NUM = #{stuNum}
	</select>
	<!--전과신청 취소  -->
	<delete id="deleteMajorList">
		DELETE APPLY_MANAGEMENT
		WHERE STU_NUM = #{stuNum} 
		AND APPLY_TYPE = 1
	</delete>
	<!--복수전공 취소  -->
	<delete id="deleteDoubleMajorList">
		DELETE APPLY_MANAGEMENT
		WHERE STU_NUM = #{stuNum}
		AND APPLY_TYPE = 2
	 </delete>
	<!--학생 전과신청 승인 시 업데이트  -->
   	<update id="updateMajorStudent">
   		UPDATE STUDENT_INFO
   		SET
   		COLLEGE_NUM = #{collegeNum}
   		, DEP_NO = #{depNo}
   		WHERE STU_NUM = #{stuNum}	
   	</update>
	 <!-- 복수전공 신청 승인 시 업데이트  -->
	<update id="updateDoubleMajorStudent">
   		UPDATE STUDENT_INFO
   		SET
   		DEP_NO2 = #{depNo}
   		WHERE STU_NUM = #{stuNum}	
   	</update>
	  <!--APPLY 끝  -->
	 
	<select id="selectMyTimetable" resultMap="myTimetable">
	 SELECT DISTINCT STU_TT_CODE
    , S.LEC_TT_CODE
    , LECTURE_NAME
    , LEC_CREDIT
    , (SELECT EMP_NAME FROM EMP_INFO WHERE I.PROF_NUM = EMP_NO) AS PROF_NAME
	FROM STU_TT S, LEC_TT L, LECTURE_INFO I, LEC_TIME T
	WHERE STU_NUM = #{memId}
	AND S.LEC_TT_CODE = L.LEC_TT_CODE
	AND I.LEC_CODE = L.LEC_CODE
	AND SEM_CODE = #{semCode}
	</select>
	<!-- 성적 조회 -->
	<select id="selectMyGrade" resultMap="myGrade">
		SELECT S.YEAR AS YEAR,
		        S.TERM AS TERM,
		        LT.LEC_CODE AS LEC_CODE,
		        LI.LECTURE_NAME AS LECTURE_NAME,
		        G.GRADE_NUM AS GRADE_NUM,
		        G.GRADE_SCORE AS GRADE_SCORE,
		        G.GRADE_ABC AS GRADE_ABC,
		        SI.STU_NUM AS STU_NUM,
		        S.SEM_CODE AS SEM_CODE,
		        LI.LEC_CREDIT AS LEC_CREDIT,
		        SI.DEP_NO AS DEP_NO
		FROM STUDENT_INFO SI, STU_TT ST, GRADE G, STU_GRADE SG, LEC_TT LT, SEMESTER S, LECTURE_INFO LI
		WHERE SI.STU_NUM = ST.STU_NUM
		AND ST.STU_TT_CODE = SG.STU_TT_CODE
		AND SG.GRADE_NUM = G.GRADE_NUM
		AND ST.LEC_TT_CODE = LT.LEC_TT_CODE
		AND LT.SEM_CODE = S.SEM_CODE
		AND LT.LEC_CODE = LI.LEC_CODE
		AND SI.STU_NUM = #{stuNum}
	</select>
	<!-- 학기코드별 총학점 -->
	<select id="groupMyGrade" resultMap="myGrade">
	  SELECT S.SEM_CODE AS SEM_CODE, 
      SUM(LI.LEC_CREDIT) AS LEC_CREDIT,
      ROUND(AVG(G.GRADE_SCORE),1) AS GRADE_SCORE        
      FROM STUDENT_INFO SI, STU_TT ST, GRADE G, STU_GRADE SG, LEC_TT LT, SEMESTER S, LECTURE_INFO LI
      WHERE SI.STU_NUM = ST.STU_NUM
      AND ST.STU_TT_CODE = SG.STU_TT_CODE
      AND SG.GRADE_NUM = G.GRADE_NUM
      AND ST.LEC_TT_CODE = LT.LEC_TT_CODE
      AND LT.SEM_CODE = S.SEM_CODE
      AND LT.LEC_CODE = LI.LEC_CODE
      AND SI.STU_NUM = #{stuNum}
	  GROUP BY S.SEM_CODE
	</select>
	<!-- 총학점 및 평균 -->
	<select id="AllMyInfo" resultMap="myGrade">
		SELECT
		SUM(LI.LEC_CREDIT) AS LEC_CREDIT,	
		ROUND(AVG(G.GRADE_SCORE),1) AS GRADE_SCORE
		 FROM STUDENT_INFO SI, STU_TT ST, GRADE G, STU_GRADE SG, LEC_TT LT, SEMESTER S, LECTURE_INFO LI
	      WHERE SI.STU_NUM = ST.STU_NUM
	      AND ST.STU_TT_CODE = SG.STU_TT_CODE
	      AND SG.GRADE_NUM = G.GRADE_NUM
	      AND ST.LEC_TT_CODE = LT.LEC_TT_CODE
	      AND LT.SEM_CODE = S.SEM_CODE
	      AND LT.LEC_CODE = LI.LEC_CODE
          AND SI.STU_NUM = #{stuNum}
	</select>
	
	<select id="countDep" resultType="int">
		SELECT COUNT(STU_NUM) AS COUNT
		FROM
		STUDENT_INFO
		WHERE DEP_NO = (SELECT DEP_NO FROM STUDENT_INFO WHERE STU_NUM = #{stuNum})
	</select>
	
	<update id="updateRepiarRequest">
		UPDATE REPAIR_REQUEST
		SET
		REQUEST_STATUS = 'Y'
		WHERE REQUEST_NUM = #{requestNum}
	</update>	
		
</mapper>

